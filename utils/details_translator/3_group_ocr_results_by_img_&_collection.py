import pandas as pd
from pathlib import Path
import os
import sys

# === UTF-8 –∫–æ–Ω—Å–æ–ª—å –¥–ª—è Windows ===
if os.name == "nt":
    import ctypes
    ctypes.windll.kernel32.SetConsoleOutputCP(65001)
    sys.stdout.reconfigure(encoding='utf-8')

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
INPUT_CSV = r"X:\\DATA_STORAGE\\Furnithai\\utils\\details_translator\\ocr_results.csv"
OUTPUT_DIR = r"X:\\DATA_STORAGE\\Furnithai\\utils\\details_translator\\3_grouped_by_product"

# === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
df = pd.read_csv(INPUT_CSV)

# === –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –µ—Å—Ç—å ===
required_columns = {
    'product_id', 'image_filename', 'text_found_on_image',
    'index_of_image_in_product'
}
assert required_columns.issubset(df.columns), f"–ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {required_columns - set(df.columns)}"

# === –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
df = df.dropna(subset=['index_of_image_in_product'])
df['image_index'] = df['index_of_image_in_product'].astype(int)

# === –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ ===
grouped = df.groupby(['product_id', 'image_index'], as_index=False).agg({
    'text_found_on_image': lambda x: ' '.join(str(t).strip() for t in x if str(t).strip())
})

# === –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ –æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É –Ω–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—é ===
Path(OUTPUT_DIR).mkdir(parents=True, exist_ok=True)

product_ids = grouped['product_id'].unique()
print(f"üîç –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {len(product_ids)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π")

for product_id in product_ids:
    group_df = grouped[grouped['product_id'] == product_id]
    if group_df.empty:
        print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: {product_id} (–Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞)")
        continue
    output_path = Path(OUTPUT_DIR) / f"{product_id}.csv"
    group_df[['product_id', 'image_index', 'text_found_on_image']].to_csv(output_path, index=False, encoding='utf-8-sig')
    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {output_path} ({len(group_df)} —Å—Ç—Ä–æ–∫)")
